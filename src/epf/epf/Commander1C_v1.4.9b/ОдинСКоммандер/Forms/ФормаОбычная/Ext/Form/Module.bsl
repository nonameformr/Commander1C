
Процедура ПриОткрытии()
	
	Объект = ЭтотОбъект;
	Элементы = ЭлементыФормы;
	СИ = Новый СистемнаяИнформация;
	Если СИ.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СИ.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		Объект.ПутьЛево = "C:";
		Объект.ПутьПраво = "C:";
	Иначе
		Объект.ПутьЛево = "/";
		Объект.ПутьПраво = "/";
	КонецЕсли;
	
	ФлагМестаЧтенияЛево = "Клиент";
	ФлагМестаЧтенияПраво = "Клиент";
	
	ПрочитатьСписокДисков("СписокДисковЛево", ФлагМестаЧтенияЛево);
	ПрочитатьСписокДисков("СписокДисковПраво", ФлагМестаЧтенияПраво);
	ПрочитатьСписокФайловЛокально("СписокФайловЛево", "ПутьЛево");
	ПрочитатьСписокФайловЛокально("СписокФайловПраво", "ПутьПраво");
	
	//#Если ВебКлиент Тогда
	//	Элементы.ИмяКомпьютераЛево.Заголовок = "";
	//	Элементы.ИмяКомпьютераПраво.Заголовок = "";
	//#Иначе
	//	Элементы.ИмяКомпьютераЛево.Заголовок = ИмяКомпьютера();
	//	Элементы.ИмяКомпьютераПраво.Заголовок = ИмяКомпьютера();
	//#КонецЕсли
	
	//ПоказатьРазмерДиска(ФлагМестаЧтенияЛево, "СписокДисковЛево", "РазмерЛево");
	//ПоказатьРазмерДиска(ФлагМестаЧтенияПраво, "СписокДисковПраво", "РазмерПраво");
	
	Элементы.ФлагМестаЧтенияЛево.СписокВыбора.Добавить("Клиент","Клиент");
	СтрокаСоединенияИБ = СтрокаСоединенияИнформационнойБазы();
	//Элементы.ИнформацияСервер.Видимость = Ложь;
	Если Найти(СтрокаСоединенияИБ, "Srvr") <> 0 ИЛИ Найти(СтрокаСоединенияИБ, "ws") <> 0  Тогда
		Элементы.ФлагМестаЧтенияЛево.СписокВыбора.Добавить("Сервер", "Сервер");
		//Элементы.ИнформацияСервер.Видимость = Истина;
	ИначеЕсли Найти(СтрокаСоединенияИБ, "ws") <> 0 Тогда // выделим доступ на веб сервере, если...
		#Если ВебКлиент Тогда
		     Элементы.ФлагМестаЧтенияЛево.СписокВыбора.Добавить("ВебКлиент", "Веб клиент");
		#КонецЕсли
	КонецЕсли;
	#Если НЕ ВебКлиент Тогда
		Элементы.ФлагМестаЧтенияЛево.СписокВыбора.Добавить("FTP", "FTP");
	#КонецЕсли
	
	Элементы.ФлагМестаЧтенияПраво.СписокВыбора.ЗагрузитьЗначения(Элементы.ФлагМестаЧтенияЛево.СписокВыбора.ВыгрузитьЗначения());
	
	ПанельЗадачОС.УстановитьНаклейку(БиблиотекаКартинок.Константа, Ложь);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	ПанельЗадачОС.УдалитьНаклейку();
КонецПроцедуры

Процедура ФлагМестаЧтенияЛевоПриИзменении(Элемент)
	
	Элементы = ЭлементыФормы;
	Объект = ЭтотОбъект;
	
	Если ФлагМестаЧтенияЛево = "Клиент" Тогда
		#Если ВебКлиент Тогда
			Элементы.ИмяКомпьютераЛево.Заголовок = "";
		#Иначе
			Элементы.ИмяКомпьютераЛево.Заголовок = ИмяКомпьютера();
		#КонецЕсли
	ИначеЕсли ФлагМестаЧтенияЛево = "Сервер" Тогда
		//Элементы.ИмяКомпьютераЛево.Заголовок = ИмяКомпьютераСервера();
	ИначеЕсли ФлагМестаЧтенияЛево = "FTP" Тогда
		Объект.СписокФайловЛево.Очистить();
		ВерхнийУровень = Объект.СписокФайловЛево.Добавить();
		ВерхнийУровень.Файл = " ..";
		ВерхнийУровень.Каталог = Истина;
	КонецЕсли;
	
	//Элементы.ГруппаИнфоПКЛево.Видимость = ФлагМестаЧтенияЛево = "Клиент" или ФлагМестаЧтенияЛево = "Сервер";
	//Элементы.ГруппаФТПЛево.Видимость = ФлагМестаЧтенияЛево = "FTP";
	
	ПрочитатьСписокДисков("СписокДисковЛево", ФлагМестаЧтенияЛево);
	//ПоказатьРазмерДиска(ФлагМестаЧтенияЛево, "СписокДисковЛево", "РазмерЛево");
	Если ФлагМестаЧтенияЛево = "FTP" Тогда
		Объект.ПутьЛево = "/"
	Иначе
		Объект.ПутьЛево = Объект.СписокДисковЛево;
	КонецЕсли;
	ПрочитатьСписокФайлов("Обновить", "СписокФайловЛево", "Лево", ФлагМестаЧтенияЛево);
	
КонецПроцедуры

Процедура ПрочитатьСписокДисков(ИмяЭлемента, ФлагМестаЧтения)
	Элементы = ЭлементыФормы;
	Объект = ЭтотОбъект;
	Элементы[ИмяЭлемента].СписокВыбора.Очистить();
	Если ФлагМестаЧтения = "Клиент" Тогда
		ПрочитатьСписокДисковЛокально(ИмяЭлемента);
	ИначеЕсли ФлагМестаЧтения = "Сервер" Тогда
		ПрочитатьСписокДисковСервер(ИмяЭлемента);
	ИначеЕсли ФлагМестаЧтения = "FTP" Тогда
		
	КонецЕсли;
	Если Элементы[ИмяЭлемента].СписокВыбора.Количество() Тогда
		Объект[ИмяЭлемента] = Элементы[ИмяЭлемента].СписокВыбора[0].Значение;
	КонецЕсли;
КонецПроцедуры

Процедура ПрочитатьСписокДисковЛокально(ИмяЭлемента)
	Элементы = ЭлементыФормы;
	СИ = Новый СистемнаяИнформация;
	Если СИ.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СИ.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		#Если ВебКлиент Тогда
			Элементы[ИмяЭлемента].СписокВыбора.Добавить("C:");
		#Иначе
			FSO = Новый COMОбъект("Scripting.FileSystemObject");
			Для Каждого стр Из FSO.Drives Цикл
				Элементы[ИмяЭлемента].СписокВыбора.Добавить(стр.Path, ?(стр.DriveType = 3, стр.Path+" ("+стр.ShareName+")", ""),, ПолучитьКартинкуДиска(стр.DriveType));//, стр.Path + " ["+стр.VolumeName+"]");
			КонецЦикла;
		#КонецЕсли
	Иначе
		Элементы[ИмяЭлемента].СписокВыбора.Добавить("/");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочитатьСписокДисковСервер(ИмяЭлемента)
	
	COMConnector = Новый COMОбъект(ИмяCOMСоединителя());
	Соединение = COMConnector.Connect("Srvr = ""sql""; Ref = ""УПП-УПР копия3""; Usr = ""Шушлебин Дмитрий Андреевич""; Pwd = ""01683648""");
	
	Элементы = ЭлементыФормы;
	СИ = Новый СистемнаяИнформация;
	Если СИ.ТипПлатформы = ТипПлатформы.Windows_x86 Или СИ.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		FSO = Новый COMОбъект("Scripting.FileSystemObject");
		Для Каждого стр Из FSO.Drives Цикл
			Элементы[ИмяЭлемента].СписокВыбора.Добавить(стр.Path, ?(стр.DriveType = 3, стр.Path+" ("+стр.ShareName+")", ""),, ПолучитьКартинкуДиска(стр.DriveType));//, стр.Path + " ["+стр.VolumeName+"]");
		КонецЦикла;
	Иначе
		Элементы[ИмяЭлемента].СписокВыбора.Добавить("/");
		//ФайлыВКорне = НайтиФайлы("/", "*");
		//Для н=2 по ФайлыВКорне.Количество()-1 Цикл // первые две строки находит "." и " .."
		//	Элементы[ИмяЭлемента].СписокВыбора.Добавить(ФайлыВКорне[н].ПолноеИмя);
		//КонецЦикла; 
	КонецЕсли;
	
	Соединение = "";
КонецПроцедуры

Функция ПолучитьКартинкуДиска(ТипДиска)
	Если ТипДиска = 1 Тогда
		КартинкаДиска = КартинкиДисков.Рисунки["diskremove"].Картинка
	ИначеЕсли ТипДиска = 2 Тогда
		КартинкаДиска = КартинкиДисков.Рисунки["diskhdd"].Картинка
	ИначеЕсли ТипДиска = 3 Тогда
		КартинкаДиска = КартинкиДисков.Рисунки["disknet"].Картинка
	ИначеЕсли ТипДиска = 4 Тогда
		КартинкаДиска = КартинкиДисков.Рисунки["diskcdrom"].Картинка
	ИначеЕсли ТипДиска = 5 Тогда
		КартинкаДиска = КартинкиДисков.Рисунки["diskram"].Картинка
	Иначе
		КартинкаДиска = Новый Картинка;
	КонецЕсли;
	
	Возврат КартинкаДиска;
КонецФункции

Процедура ПрочитатьСписокФайловЛокально(ИмяЭлемента, Путь)
	
	Объект = ЭтотОбъект;
	//Элементы = ЭлементыФормы;
	//#Если не ВебКлиент Тогда
	//	Элементы.ИмяКомпьютераЛево.Заголовок = ИмяКомпьютера();	
	//#Иначе
	//	Элементы.ИмяКомпьютераЛево.Заголовок = "";
	//#КонецЕсли
	
	//Объект[ИмяЭлемента].Очистить();
	ЭтаФорма[ИмяЭлемента].Очистить();
	//ВерхнийУровень = Объект[ИмяЭлемента].Добавить();
	ВерхнийУровень = ЭтаФорма[ИмяЭлемента].Добавить();
	ВерхнийУровень.Файл = " ..";
	ВерхнийУровень.Каталог = Истина;
	
	ДопПараметры = Новый Структура("ИмяЭлемента", ИмяЭлемента);
	ОО = Новый ОписаниеОповещения("ВыполнитьПослеПоискаФайлов", ЭтаФорма, ДопПараметры);
	НачатьПоискФайлов(ОО, Объект[Путь], "*");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеПоискаФайлов(НайденныеФайлы, ДопПараметры) Экспорт
	
	ДопПараметры.Вставить("МассивФайлов", НайденныеФайлы);
	ДопПараметры.Вставить("ВсегоФайлов", НайденныеФайлы.Количество());
	ДопПараметры.Вставить("ИндексФайла", 0);
	ОбработкаНайденныхФайлов(ДопПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНайденныхФайлов(КонтекстПоиска)
	Объект = ЭтотОбъект;
	Если КонтекстПоиска.ИндексФайла >= КонтекстПоиска.ВсегоФайлов Тогда
		//Объект[КонтекстПоиска.ИмяЭлемента].Сортировать("Каталог Убыв, Файл");
		ЭтаФорма[КонтекстПоиска.ИмяЭлемента].Сортировать("Каталог Убыв, Файл");
		Возврат;
	КонецЕсли;
	
	ТекущийФайл = КонтекстПоиска.МассивФайлов[КонтекстПоиска.ИндексФайла];
	КонтекстПоиска.ИндексФайла = КонтекстПоиска.ИндексФайла + 1;
	
	КонтекстПоиска.Вставить("ТекущийФайл", ТекущийФайл);
	
	ТекущийФайл.НачатьПроверкуЭтоКаталог(Новый ОписаниеОповещения("ОбработкаПроверкиЭтоКаталог", ЭтаФорма, КонтекстПоиска, "ОбработкаОшибки", ЭтаФорма));
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПроверкиЭтоКаталог(ЭтоКаталог, КонтекстПоиска) Экспорт
	//Обрабатываем текущий файл...
	ТекущийФайл =  КонтекстПоиска.ТекущийФайл;
	КонтекстПоиска.Вставить("ЭтоКаталог", ЭтоКаталог);
	ТекущийФайл.НачатьПолучениеВремениИзменения(Новый ОписаниеОповещения("ОбработкаПолученияВремениИзменения", ЭтаФорма, КонтекстПоиска));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПолученияВремениИзменения(ВремяИзменения, КонтекстПоиска) Экспорт
	
	ТекущийФайл =  КонтекстПоиска.ТекущийФайл;
	КонтекстПоиска.Вставить("ВремяИзменения", ВремяИзменения);
	
	Если КонтекстПоиска.ЭтоКаталог Тогда
		ВыводДанныхФайлаВСписок(КонтекстПоиска);
	Иначе
		ТекущийФайл.НачатьПолучениеРазмера(Новый ОписаниеОповещения("ОбработкаПолученияРазмера", ЭтаФорма, КонтекстПоиска));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПолученияРазмера(Размер, КонтекстПоиска) Экспорт
	
	ТекущийФайл =  КонтекстПоиска.ТекущийФайл;
	КонтекстПоиска.Вставить("Размер", Размер);
	
	ВыводДанныхФайлаВСписок(КонтекстПоиска);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОшибки(ИнформацияОбОшибке, СтандартнаяОбработка, КонтекстПоиска) Экспорт
	СтандартнаяОбработка = Ложь;
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ИнформацияОбОшибке.Описание;
	Сообщение.Сообщить();
	ОбработкаНайденныхФайлов(КонтекстПоиска); //Продолжаем обработку
КонецПроцедуры
 
&НаКлиенте
Процедура ВыводДанныхФайлаВСписок(КонтекстПоиска)
	
	Объект = ЭтотОбъект;
	ТекущийФайл =  КонтекстПоиска.ТекущийФайл;
	//новстр = Объект[КонтекстПоиска.ИмяЭлемента].Добавить();
	новстр = ЭтаФорма[КонтекстПоиска.ИмяЭлемента].Добавить();
	новстр.Файл = ТекущийФайл.Имя;
	Расширение = ?(ТекущийФайл.Расширение = "", "", ТекущийФайл.Расширение + ";");
	Если КонтекстПоиска.ЭтоКаталог Тогда
		новстр.Каталог = Истина;
		#Если ВебКлиент Тогда
			//новстр.Картинка = БиблиотекаКартинок.ОткрытьФайл;
		#Иначе
			//новстр.Картинка = Объект.КартинкаПапки;
		#КонецЕсли
	ИначеЕсли Найти(Объект.СтрокаПоддерживаемыхСтроковыхФайлов, НРег(Расширение)) <> 0 И Расширение <> "" Тогда
		//новстр.Картинка = БиблиотекаКартинок.Документ;
	КонецЕсли;
	Если НЕ КонтекстПоиска.ЭтоКаталог Тогда
		#Если НЕ ВебКлиент Тогда
		новстр.Размер = Окр(КонтекстПоиска.Размер/(1024*1024), 2); //ТекущийФайл.Размер()
		#КонецЕсли
	КонецЕсли;
	#Если НЕ ВебКлиент Тогда
	новстр.ДатаИзменения = КонтекстПоиска.ВремяИзменения; //ТекущийФайл.ПолучитьВремяИзменения();
	#КонецЕсли
	
	ОбработкаНайденныхФайлов(КонтекстПоиска); //Продолжаем обработку
КонецПроцедуры

Процедура СписокФайловЛевоВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ПрочитатьСписокФайлов(,"СписокФайловЛево", "Лево", ФлагМестаЧтенияЛево);
КонецПроцедуры

Процедура СписокФайловПравоВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ПрочитатьСписокФайлов(,"СписокФайловПраво", "Право", ФлагМестаЧтенияПраво);
КонецПроцедуры

Процедура СписокФайловЛевоПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Файл = " .." Тогда
		ОформлениеСтроки.Ячейки.Картинка.УстановитьКартинку(БиблиотекаКартинок.УровеньВверх);
	ИначеЕсли ДанныеСтроки.Каталог Тогда
		ОформлениеСтроки.Ячейки.Картинка.УстановитьКартинку(ЭтотОбъект.КартинкаПапки);
	КонецЕсли;
КонецПроцедуры

Процедура СписокФайловПравоПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Файл = " .." Тогда
		ОформлениеСтроки.Ячейки.Картинка.УстановитьКартинку(БиблиотекаКартинок.УровеньВверх);
	ИначеЕсли ДанныеСтроки.Каталог Тогда
		ОформлениеСтроки.Ячейки.Картинка.УстановитьКартинку(ЭтотОбъект.КартинкаПапки);
	КонецЕсли;
КонецПроцедуры

Процедура СписокДисковЛевоПриИзменении(Элемент)
	ЭтотОбъект.ПутьЛево = ЭтотОбъект.СписокДисковЛево;
	ПрочитатьСписокФайлов("Обновить", "СписокФайловЛево", "Лево", ФлагМестаЧтенияЛево);
	//ПоказатьРазмерДиска(ФлагМестаЧтенияЛево, "СписокДисковЛево", "РазмерЛево");
КонецПроцедуры

Процедура СписокДисковПравоПриИзменении(Элемент)
	ЭтотОбъект.ПутьПраво = ЭтотОбъект.СписокДисковПраво;
	ПрочитатьСписокФайлов("Обновить", "СписокФайловПраво", "Право", ФлагМестаЧтенияПраво);
	//ПоказатьРазмерДиска(ФлагМестаЧтенияПраво, "СписокДисковПраво", "РазмерПраво");
КонецПроцедуры

Процедура ПрочитатьСписокФайлов(РежимЧтения = "", ИмяЭлемента = Неопределено, РасположениеПравоЛево = Неопределено, ФлагМестаЧтения)// = Неопределено)
	
	Объект = ЭтотОбъект;
	Элементы = ЭлементыФормы;
	ТекущиеДанные = Элементы[ИмяЭлемента].ТекущиеДанные;
	//ТекущиеДанные = ЭтаФорма[ИмяЭлемента].ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЧтения = "Обновить" Тогда
		
	ИначеЕсли РежимЧтения = "Корень" Тогда // переход в корень
		Если ФлагМестаЧтения = "FTP" Тогда
			Объект["Путь"+РасположениеПравоЛево] = "/"
		Иначе
			Объект["Путь"+РасположениеПравоЛево] = Объект["СписокДисков"+РасположениеПравоЛево]
		КонецЕсли;
	Иначе
		Если ТекущиеДанные.Файл = " .." Тогда // переход на уровень вверх
			Если НайтиСимволСКонца(Объект["Путь"+РасположениеПравоЛево], "/") <> 0 Тогда // 8.3.6 только появилось - СтрНайти(Объект.КаталогДляЧтенияФайлов, "\", НаправлениеПоиска.СКонца) <> 0 Тогда
				НовыйПуть = Лев(Объект["Путь"+РасположениеПравоЛево], НайтиСимволСКонца(Объект["Путь"+РасположениеПравоЛево], "/")-1); // 
				Если НовыйПуть = "" Тогда
					Если Лев(Объект["Путь"+РасположениеПравоЛево], 1) = "/" Тогда
						Объект["Путь"+РасположениеПравоЛево] = "/";
					КонецЕсли;
				Иначе
					Объект["Путь"+РасположениеПравоЛево] = НовыйПуть;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ТекущиеДанные.Каталог Тогда // переход в каталог
			Объект["Путь"+РасположениеПравоЛево] = Объект["Путь"+РасположениеПравоЛево] + ?(Прав(Объект["Путь"+РасположениеПравоЛево], 1) <> "/" , "/", "") + ТекущиеДанные.Файл;
		КонецЕсли;
	КонецЕсли;
	
	Если ФлагМестаЧтения = "Клиент" Тогда
		ПрочитатьСписокФайловЛокально(ИмяЭлемента, "Путь"+РасположениеПравоЛево);
	ИначеЕсли ФлагМестаЧтения = "Сервер" Тогда
		//ПрочитатьСписокФайловНаСервере(ИмяЭлемента, "Путь"+РасположениеПравоЛево);
	ИначеЕсли ФлагМестаЧтения = "FTP" Тогда
		//ПрочитатьСписокФайловFTP(ИмяЭлемента, "Путь"+РасположениеПравоЛево);
	КонецЕсли;
	
	//FIX: необходим рефакторинг, сложно читаемый код
	//Если ТекущиеДанные.Файл = " .." и РежимЧтения <> "Обновить" Тогда // переход на уровень вверх
	//	Если НайтиСимволСКонца(Объект[ИмяПути], "/") <> 0 Тогда // 8.3.6 только появилось - СтрНайти(Объект.КаталогДляЧтенияФайлов, "\", НаправлениеПоиска.СКонца) <> 0 Тогда
	//		НовыйПуть = Лев(Объект[ИмяПути], НайтиСимволСКонца(Объект[ИмяПути], "/")-1); // 
	//		Если НовыйПуть = "" Тогда
	//			Если Лев(Объект[ИмяПути], 1) = "/" Тогда
	//				Объект[ИмяПути] = "/";
	//			КонецЕсли; 
	//		Иначе
	//			Объект[ИмяПути] = НовыйПуть;
	//		КонецЕсли; 
	//	КонецЕсли;
	//	Если ФлагМестаЧтения = "Клиент" Тогда
	//		ПрочитатьСписокФайловЛокально(ИмяЭлемента, ИмяПути);
	//	ИначеЕсли ФлагМестаЧтения = "Сервер" Тогда
	//		ПрочитатьСписокФайловНаСервере(ИмяЭлемента, ИмяПути);
	//	ИначеЕсли ФлагМестаЧтения = "FTP" Тогда 
	//		ПрочитатьСписокФайловFTP(ИмяЭлемента, ИмяПути);
	//	КонецЕсли;
	//	Возврат;
	//КонецЕсли;
	//
	//Если ТекущиеДанные.Каталог и РежимЧтения <> "Обновить" Тогда // вход в каталог
	//	Объект[ИмяПути] = Объект[ИмяПути] + ?(Прав(Объект[ИмяПути], 1) <> "/" , "/", "") + ТекущиеДанные.Файл;
	//	Если ФлагМестаЧтения = "Клиент" Тогда
	//		ПрочитатьСписокФайловЛокально(ИмяЭлемента, ИмяПути);
	//	ИначеЕсли ФлагМестаЧтения = "Сервер" Тогда
	//		ПрочитатьСписокФайловНаСервере(ИмяЭлемента, ИмяПути);
	//	ИначеЕсли ФлагМестаЧтения = "FTP" Тогда
	//		ПрочитатьСписокФайловFTP(ИмяЭлемента, ИмяПути);
	//	КонецЕсли;
	//Иначе // просто обновление
	//	Если ФлагМестаЧтения = "Клиент" Тогда
	//		ПрочитатьСписокФайловЛокально(ИмяЭлемента, ИмяПути);
	//	ИначеЕсли ФлагМестаЧтения = "Сервер" Тогда
	//		ПрочитатьСписокФайловНаСервере(ИмяЭлемента, ИмяПути);
	//	ИначеЕсли ФлагМестаЧтения = "FTP" Тогда
	//		ПрочитатьСписокФайловFTP(ИмяЭлемента, ИмяПути);
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

Функция НайтиСимволСКонца(Знач Строка, Знач Символ)
	
	Для Позиция = -СтрДлина(Строка) По -1 Цикл
		Если Сред(Строка, -Позиция, СтрДлина(Символ)) = Символ Тогда
			Возврат -Позиция;
		КонецЕсли;
	КонецЦикла;
	
	Возврат 0;
		
КонецФункции

&НаСервереБезКонтекста
Функция ИмяКомпьютераСервера()
	Возврат ИмяКомпьютера()
КонецФункции

// Возвращает имя COM-класса для работы с 1С:Предприятием 8 через COM-соединение.
//
Функция ИмяCOMСоединителя() Экспорт
	
	СистемнаяИнфо = Новый СистемнаяИнформация;
	ПодстрокиВерсии = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
		СистемнаяИнфо.ВерсияПриложения, ".");
	Возврат "v" + ПодстрокиВерсии[0] + ПодстрокиВерсии[1] + ".COMConnector";
	
КонецФункции

Заголовок = Метаданные().Представление() + "        " + СтрокаСоединенияИнформационнойБазы();
КартинкиДисков = ОбработкаОбъект.ПолучитьМакет("КартинкиДисков");
МакетКартинкиПапка = ОбработкаОбъект.ПолучитьМакет("КартинкаПапка");
ЭтотОбъект.КартинкаПапки = Новый Картинка(МакетКартинкиПапка);
